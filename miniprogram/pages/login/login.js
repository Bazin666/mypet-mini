"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var api_1 = require("../../utils/api");
Page({
    onLoad: function (options) {
        options;
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
        return {};
    },
    data: {
        username: '',
        password: '',
        res_msg: '',
        buttons: [{ text: 'OK' }],
        is_show_dialog: false,
        login_state: "",
        user_data: '',
        userInfo: undefined,
        hasUserInfo: false,
    },
    formSubmit: function (e) {
        var _this = this;
        var info = e.detail.value;
        api_1.login(info, function () {
            _this.setData({ res_msg: '登陆成功' });
            _this.setData({ login_state: 'success_login' });
            _this.showMsg();
            console.log('show');
        }, function () {
            _this.setData({ login_state: 'fail_login' });
            _this.setData({ res_msg: '登陆失败' });
            _this.showMsg();
        });
    },
    formReset: function () {
        wx.navigateTo({
            url: '../reg/reg'
        });
    },
    showMsg: function () {
        var _this = this;
        _this.setData({ is_show_dialog: true });
    },
    success_login: function () {
        var _this = this;
        var pages = getCurrentPages();
        var prePage = pages[pages.length - 2];
        prePage.setData({ userInfo: _this.data.userInfo,
            hasUserInfo: true, });
        wx.navigateBack({
            delta: 1,
        });
    },
    fail_login: function () {
        this.setData({
            is_show_dialog: false,
        });
    },
    wx_login: function () {
        wx.login({
            success: function (res) {
                console.log(res);
                api_1.wx_login_api({ code: res.code }, function () { console.log("wx_login"); });
            }
        });
    },
    wx_getuserinfo: function (e) {
        var _this = this;
        var userdetail = JSON.stringify(e.detail);
        _this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true,
        });
        console.log(e.detail.userInfo);
        wx.setStorageSync('userInfo', e.detail.userInfo);
        wx.login({
            success: function (res) {
                var info = { code: res.code, userinfo: userdetail };
                api_1.wx_login_api(info, function () {
                    _this.setData({ res_msg: '登陆成功' });
                    _this.setData({ login_state: 'success_login' });
                    _this.showMsg();
                });
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsb2dpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFtRDtBQUNuRCxJQUFJLENBQUM7SUFDRCxNQUFNLEVBQUMsVUFBUyxPQUFPO1FBQ25CLE9BQU8sQ0FBQTtJQUNYLENBQUM7SUFDRCxPQUFPLEVBQUU7SUFFVCxDQUFDO0lBRUQsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUVELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFFRCxRQUFRLEVBQUU7SUFFVixDQUFDO0lBRUQsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUVELGFBQWEsRUFBRTtJQUVmLENBQUM7SUFFRCxpQkFBaUIsRUFBRTtRQUVmLE9BQU8sRUFBRSxDQUFBO0lBQ2IsQ0FBQztJQUVELElBQUksRUFBQztRQUNELFFBQVEsRUFBQyxFQUFFO1FBQ1gsUUFBUSxFQUFDLEVBQUU7UUFDWCxPQUFPLEVBQUMsRUFBRTtRQUNWLE9BQU8sRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxDQUFDO1FBQ3JCLGNBQWMsRUFBQyxLQUFLO1FBQ3BCLFdBQVcsRUFBQyxFQUFFO1FBQ2QsU0FBUyxFQUFDLEVBQUU7UUFDWixRQUFRLEVBQUMsU0FBUztRQUNsQixXQUFXLEVBQUMsS0FBSztLQUNwQjtJQUVELFVBQVUsWUFBQyxDQUFNO1FBQ2IsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFBO1FBQ3pCLFdBQUssQ0FBQyxJQUFJLEVBQUM7WUFDUCxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxDQUFDLENBQUE7WUFDL0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFDLFdBQVcsRUFBQyxlQUFlLEVBQUMsQ0FBQyxDQUFBO1lBQzVDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQTtZQUVmLE9BQU8sQ0FB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c291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtsb2dpbiwgd3hfbG9naW5fYXBpfSBmcm9tICcuLi8uLi91dGlscy9hcGknXHJcblBhZ2Uoe1xyXG4gICAgb25Mb2FkOmZ1bmN0aW9uKG9wdGlvbnMpe1xyXG4gICAgICAgIG9wdGlvbnNcclxuICAgIH0sXHJcbiAgICBvblJlYWR5OiBmdW5jdGlvbiAoKSB7XHJcbiAgXHJcbiAgICB9LFxyXG5cclxuICAgIG9uU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gIFxyXG4gICAgfSxcclxuXHJcbiAgICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcclxuICBcclxuICAgIH0sXHJcblxyXG4gICAgb25VbmxvYWQ6IGZ1bmN0aW9uICgpIHtcclxuICBcclxuICAgIH0sXHJcblxyXG4gICAgb25QdWxsRG93blJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcclxuICBcclxuICAgIH0sXHJcblxyXG4gICAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCkge1xyXG4gIFxyXG4gICAgfSxcclxuXHJcbiAgICBvblNoYXJlQXBwTWVzc2FnZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICByZXR1cm4ge31cclxuICAgIH0sXHJcblxyXG4gICAgZGF0YTp7XHJcbiAgICAgICAgdXNlcm5hbWU6JycsXHJcbiAgICAgICAgcGFzc3dvcmQ6JycsXHJcbiAgICAgICAgcmVzX21zZzonJyxcclxuICAgICAgICBidXR0b25zOlt7dGV4dDonT0snfV0sXHJcbiAgICAgICAgaXNfc2hvd19kaWFsb2c6ZmFsc2UsXHJcbiAgICAgICAgbG9naW5fc3RhdGU6XCJcIixcclxuICAgICAgICB1c2VyX2RhdGE6JycsXHJcbiAgICAgICAgdXNlckluZm86dW5kZWZpbmVkLFxyXG4gICAgICAgIGhhc1VzZXJJbmZvOmZhbHNlLFxyXG4gICAgfSxcclxuXHJcbiAgICBmb3JtU3VibWl0KGU6IGFueSl7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgaW5mbyA9IGUuZGV0YWlsLnZhbHVlXHJcbiAgICAgICAgbG9naW4oaW5mbywoKT0+e1xyXG4gICAgICAgICAgICBfdGhpcy5zZXREYXRhKHtyZXNfbXNnOifnmbvpmYbmiJDlip8nfSlcclxuICAgICAgICAgICAgX3RoaXMuc2V0RGF0YSh7bG9naW5fc3RhdGU6J3N1Y2Nlc3NfbG9naW4nfSlcclxuICAgICAgICAgICAgX3RoaXMuc2hvd01zZygpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc2hvdycpXHJcbiAgICAgICAgfSwoKSA9PiB7XHJcbiAgICAgICAgICAgIF90aGlzLnNldERhdGEoe2xvZ2luX3N0YXRlOidmYWlsX2xvZ2luJ30pXHJcbiAgICAgICAgICAgIF90aGlzLnNldERhdGEoe3Jlc19tc2c6J+eZu+mZhuWksei0pSd9KVxyXG4gICAgICAgICAgICBfdGhpcy5zaG93TXNnKClcclxuICAgICAgICB9KVxyXG5cclxuICAgIH0sXHJcbiAgICBmb3JtUmVzZXQoKXtcclxuICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcclxuICAgICAgICAgICAgdXJsOicuLi9yZWcvcmVnJ1xyXG4gICAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzaG93TXNnKCl7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpc1xyXG4gICAgICAgIF90aGlzLnNldERhdGEoe2lzX3Nob3dfZGlhbG9nOnRydWV9KVxyXG5cclxuICAgIH0sXHJcbiAgICBzdWNjZXNzX2xvZ2luKCl7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpc1xyXG4gICAgICAgIHZhciBwYWdlcyA9IGdldEN1cnJlbnRQYWdlcygpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHByZVBhZ2UgPSBwYWdlc1twYWdlcy5sZW5ndGggLSAyXTtcclxuICAgICAgICAgICAgICAgIHByZVBhZ2Uuc2V0RGF0YSh7dXNlckluZm86X3RoaXMuZGF0YS51c2VySW5mbyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzVXNlckluZm86IHRydWUsfSlcclxuICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soe1xyXG4gICAgICAgICAgICBkZWx0YToxLFxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgZmFpbF9sb2dpbigpe1xyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIGlzX3Nob3dfZGlhbG9nOmZhbHNlLFxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgd3hfbG9naW4oKXtcclxuICAgICAgICB3eC5sb2dpbih7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3MocmVzKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcylcclxuICAgICAgICAgICAgICAgIHd4X2xvZ2luX2FwaSh7Y29kZTpyZXMuY29kZX0sKCk9Pntjb25zb2xlLmxvZyhcInd4X2xvZ2luXCIpfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgd3hfZ2V0dXNlcmluZm8oZTphbnkpe1xyXG4gICAgICAgIHZhciBfdGhpcyAgPSB0aGlzXHJcbiAgICAgICAgdmFyIHVzZXJkZXRhaWw9IEpTT04uc3RyaW5naWZ5KGUuZGV0YWlsKVxyXG4gICAgICAgIF90aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICB1c2VySW5mbzogZS5kZXRhaWwudXNlckluZm8sXHJcbiAgICAgICAgICAgIGhhc1VzZXJJbmZvOiB0cnVlLFxyXG4gICAgICAgICAgfSlcclxuICAgICAgICBjb25zb2xlLmxvZyhlLmRldGFpbC51c2VySW5mbylcclxuICAgICAgICB3eC5zZXRTdG9yYWdlU3luYygndXNlckluZm8nLGUuZGV0YWlsLnVzZXJJbmZvKVxyXG4gICAgICAgIHd4LmxvZ2luKHtcclxuICAgICAgICAgICAgc3VjY2VzcyhyZXMpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGluZm8gPSB7Y29kZTpyZXMuY29kZSx1c2VyaW5mbzp1c2VyZGV0YWlsfVxyXG4gICAgICAgICAgICAgICAgd3hfbG9naW5fYXBpKGluZm8sKCk9PntcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldERhdGEoe3Jlc19tc2c6J+eZu+mZhuaIkOWKnyd9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zZXREYXRhKHtsb2dpbl9zdGF0ZTonc3VjY2Vzc19sb2dpbid9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zaG93TXNnKCl9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgIH1cclxufSkiXX0=